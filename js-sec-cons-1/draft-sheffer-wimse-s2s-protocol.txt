



Workload Identity in Multi System Environments               B. Campbell
Internet-Draft                                             Ping Identity
Intended status: Standards Track                              D. Feldman
Expires: 3 January 2025                                                 
                                                              J. Salowey
                                                                  Venafi
                                                      A. Schwenkschuster
                                                               Microsoft
                                                              Y. Sheffer
                                                                  Intuit
                                                             2 July 2024


                WIMSE Service to Service Authentication
                draft-sheffer-wimse-s2s-protocol-latest

Abstract

   TODO Abstract

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://yaronf.github.io/wimse-s2s/draft-sheffer-wimse-s2s-
   protocol.html.  Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-sheffer-wimse-s2s-protocol/.

   Discussion of this document takes place on the Workload Identity in
   Multi System Environments Working Group mailing list
   (mailto:wimse@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/wimse/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/wimse/.

   Source for this draft and an issue tracker can be found at
   https://github.com/yaronf/wimse-s2s.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 3 January 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
     1.1.  Deployment Architecture and Message Flow
   2.  Conventions and Definitions
   3.  Application Level Service To Service Authentication
     3.1.  The WIMSE ID Token
     3.2.  Option 1: DPoP-Inspired Authentication
     3.3.  Option 2: Authentication Based on HTTP Message Signatures
   4.  Using Mutual TLS for Service To Service Authentication
   5.  Security Considerations
     5.1.  WIMSE Identity
     5.2.  Workload ID Token and Proof of Possession
     5.3.  Middle Boxes
     5.4.  Privacy Considerations
   6.  IANA Considerations
   7.  References
     7.1.  Normative References
     7.2.  Informative References
   Acknowledgments
   Authors' Addresses

1.  Introduction

   This document defines authentication and authorization in the context
   of interaction between two workloads.  This is the core component of
   the WIMSE architecture [I-D.ietf-wimse-arch].  Assume that Service A
   needs to call Service B.  For simplicity, this document focuses on
   HTTP-based services, and the service-to-service call consists of a
   single HTTP request and its response.  We define the credentials that
   both services should possess and how they are used to protect the
   HTTP exchange.

   There are multiple deployment styles in use today, and they result in
   different security properties.  We propose to address them
   differently.

   *  Many use cases have various middleboxes inserted between pairs of
      services, resulting in a transport layer that is not end-to-end
      encrypted.  We propose to address these use cases by protecting
      the HTTP messages at the application level (Section 3).

   *  The other commonly deployed architecture has a mutual-TLS
      connection between each pair of services.  This setup can be
      addressed by a simpler solution (Section 4).

   It is an explicit goal of this protocol that a service deployment can
   include both architectures across a multi-chain call.  In other
   words, Service A can call Service B with mutual TLS protection, while
   the next call to Service C is protected at the application level.

   For application-level protection we currently propose two alternative
   solutions, one inspired by DPoP [RFC9449] and one which is a profile
   of HTTP Message Signatures [RFC9421].  The design team believes that
   we need to pick one of these two alternatives for standardization,
   once we have understood their pros and cons.

1.1.  Deployment Architecture and Message Flow

   Regardless of the transport between the workloads, we assume the
   following logical architecture:

   +------------+               +------------+
   |            |               |            |
   |            |               | Workload B |
   | Workload A |==============>|            |
   |            |               |   +--------+
   |            |               |   |  PEP   |
   +------------+               +---+--------+
         ^                        ^     ^
         |                        |     |
         | +----------------------+     |
         | |                            |
         v v                            v
   +------------+               +------------+
   |            |               |            |
   |  Identity  |               |    PDP     |
   |   Server   |               | (optional) |
   |            |               |            |
   +------------+               +------------+

   The Identity Server provisions credentials to each of the workloads.
   At least Workload A (and possibly both) must be provisioned with a
   credential before the call can proceed.  Details of communication
   with the Identity Server are out of scope of this document, however
   we do describe the credential received by the workload.

   PEP is a Policy Enforcement Point, the component that allows the call
   to go through or blocks it.  PDP is an optional Policy Decision
   Point, which may be deployed in architectures where policy management
   is centralized.  All details of policy management and message
   authorization are out of scope of this document.

   The high-level message flow is as follows:

   *  Workload A obtains a credential from the Identity Server.  This
      happens periodically, e.g. once every 24 hours.

   *  Workload A makes an HTTP call into Workload B.  This is a regular
      HTTP request, with the additional protection mechanisms defined
      below.

   *  Workload B now authenticates Workload A and decides whether to
      authorize the call.  In certain architectures, Workload B may need
      to consult with an external server to decide whether to accept the
      call.

   *  Workload B returns a response to Workload A, which may be an error
      response or a regular one.

2.  Conventions and Definitions

   This document uses "service" and "workload" interchangeably.
   Otherwise, all terms are as defined by [I-D.ietf-wimse-arch].

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Application Level Service To Service Authentication

3.1.  The WIMSE ID Token

3.2.  Option 1: DPoP-Inspired Authentication

3.3.  Option 2: Authentication Based on HTTP Message Signatures

4.  Using Mutual TLS for Service To Service Authentication

5.  Security Considerations

5.1.  WIMSE Identity

   The WIMSE ID is scoped within a issuer and therefore any sub
   components (path portion of ID) are only unique within a trust domain
   defined by the issuer.  Using a WIMSE ID without taking into account
   the trust domain could allow one domain to issue tokens to spoof
   identities in another domain.  Additionally, the trust domain must be
   tied to an authorized issuer cryptographic trust root through some
   mechanism such as a JWKS or X.509 certificate chain.  The association
   of an issuer, trust domain and a cryptographic trust root MUST be
   communicated securely out of band.

   [TODO: Should there be a DNS name to Trust domain mapping defined or
   some other discovery mechanism?]

5.2.  Workload ID Token and Proof of Possession

   The Workload ID token (WIT) is bound to a secret cryptographic key
   and is always presented with a proof of possession as described in
   section [to-wit].  The WIT is a general purpose token that can be
   presented in multiple contexts.  The WIT and its PoP are only used in
   the application-level options, and both are not used in MTLS.  The
   WIT MUST NOT be used as a bearer token.  While this helps reduce the
   sensitivity of the token it is still possible that a token and its
   proof of possession may be captured and replayed within the POP's
   lifetime.  The following are some mitigations for the capture and
   reuse of the proof of possession (POP):

   *  Preventing Eavesdropping and Interception with TLS

   An attacker observing or intercepting the communication channel can
   view the token and its proof of possession and attempt to replay it
   to gain an advantage.  In order to prevent this the token and proof
   of possession MUST be sent over a secure, server authenticated TLS
   connection unless a secure channel is provided by some other
   mechanisms.  Host name validation according to section [mutual-tls]
   MUST be performed.  The WIT itself is not usable without a proof of
   possession.

   *  Limiting Proof of Possession Lifespan

   The proof of possession MUST be time limited.  A POP should only be
   valid over the time necessary for it to be successfully used for the
   purpose it is needed.  This will typically be on the order of
   minutes.  POPs received outside their validity time MUST be rejected.

   *  Limiting Proof of Possession Scope

   In order to reduce the risk of theft and replay the POP should have a
   limited scope.  For example, a POP may be targeted for use with a
   specific workload and even a specific transaction to reduce the
   impact of a stolen POP.  In some cases a workload may wish to reuse a
   POP for a period of time or have it accepted by multiple target
   workloads.  A careful analysis is warranted to understand the impacts
   to the system if a POP is disclosed allowing it to be presented by an
   attacker along with a captured WIT.

   *  Binding to a Timestamp or Nonce

   A proof of possession should include information that can be used to
   uniquely identify it such as a unique timestamp or nonce.  This can
   be used by the receiver to perform basic replay protection against
   tokens it has already seen.  Depending upon the design of the system
   it may be difficult to synchronize the replay cache across all token
   validators.  In this case, if the POP is not sufficiently scoped it
   may be usable with another workload.  While a fresh nonce could be
   included in the POP, a mechanism for distributing a fresh challenge
   nonce from the validator to provide single use properties of a POP is
   outside the scope of this specification.

   *  Binding to Sender

   The POP MAY be bound to a sender such as the client identity of a TLS
   session or TLS channel binding parameters.  The mechanisms for
   binding are outside the scope of this specification.

5.3.  Middle Boxes

   In some deployments the WIMSE token and proof of possession may pass
   through multiple systems.  The communication between the systems is
   over TLS, but the token and POP are available in the clear at each
   intermediary.  While the intermediary cannot modify the token or the
   information within the POP they can attempt to capture and replay the
   token or modify the data not protected by the POP.  Mitigations
   listed in the previous section can be used to provide some protection
   from middle boxes.  Deployments should perform analysis on their
   situation to determine if it is appropriate to trust and allow
   traffic to pass through a middle box.

5.4.  Privacy Considerations

   WITs and the proofs of possession may contain private information
   such as user names or other identities.  Care should be taken to
   prevent the disclosure of this information.  The use of TLS helps
   protect the privacy of WITs and proofs of possession.

   WITs and Certificates with WIMSE identifiers are typically associated
   with a workload and not a specific user, however in some deployments
   the workload may be associated directly to a user.  While these are
   exceptional cases a deployment should evaluate if the disclosure of
   WITs or certificates can be used to track a user.

6.  IANA Considerations

   TODO IANA

7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC9421]  Backman, A., Ed., Richer, J., Ed., and M. Sporny, "HTTP
              Message Signatures", RFC 9421, DOI 10.17487/RFC9421,
              February 2024, <https://www.rfc-editor.org/rfc/rfc9421>.

7.2.  Informative References

   [I-D.ietf-wimse-arch]
              Salowey, J. A., Rosomakho, Y., and H. Tschofenig,
              "Workload Identity in a Multi System Environment (WIMSE)
              Architecture", Work in Progress, Internet-Draft, draft-
              ietf-wimse-arch-00, 18 April 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-wimse-
              arch-00>.

   [RFC9449]  Fett, D., Campbell, B., Bradley, J., Lodderstedt, T.,
              Jones, M., and D. Waite, "OAuth 2.0 Demonstrating Proof of
              Possession (DPoP)", RFC 9449, DOI 10.17487/RFC9449,
              September 2023, <https://www.rfc-editor.org/rfc/rfc9449>.

Acknowledgments

   TODO acknowledge.

Authors' Addresses

   Brian Campbell
   Ping Identity
   Email: bcampbell@pingidentity.com


   Daniel Feldman


   Joe Salowey
   Venafi
   Email: joe.salowey@gmail.com


   Arndt Schwenkschuster
   Microsoft
   Email: arndts.ietf@gmail.com


   Yaron Sheffer
   Intuit
   Email: yaronf.ietf@gmail.com
